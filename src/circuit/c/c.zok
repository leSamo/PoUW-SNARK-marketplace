/*
    Check if a prover knows a number would take at least 5 steps to converge to the number 1
    given the rules of Collatz conjecture.

    Number of constraints: 761
*/

def main(private u32 a, public field integrity) -> bool {
    assert (integrity != 0);

    u32 mut b = a;

    for u32 i in 0..5 {
        b = if b % 2 == 0 { b / 2 } else { b * 3 + 1 };
        assert (b != 1);
    }

    return true;
}
